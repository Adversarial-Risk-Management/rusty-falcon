/*
 * CrowdStrike API Specification
 *
 * Use this API specification as a reference for the API endpoints you can use to interact with your Falcon environment. These endpoints support authentication via OAuth2 and interact with detections and network containment. For detailed usage guides and examples, see our [documentation inside the Falcon console](https://falcon.crowdstrike.com/support/documentation).     To use the APIs described below, combine the base URL with the path shown for each API endpoint. For commercial cloud customers, your base URL is `https://api.crowdstrike.com`.    Each API endpoint requires authorization via an OAuth2 token. Your first API request should retrieve an OAuth2 token using the `oauth2/token` endpoint, such as `https://api.crowdstrike.com/oauth2/token`. For subsequent requests, include the OAuth2 token in an HTTP authorization header. Tokens expire after 30 minutes, after which you should make a new token request to continue making API requests.
 *
 * The version of the OpenAPI document: 2025-07-18T00:00:03Z
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DomainPeriodVulnerabilityCvssV3 {
    /// Describes the conditions beyond the attackerâ€™s control that must exist in order to exploit the vulnerability, one of: Low, High
    #[serde(rename = "attack_complexity", skip_serializing_if = "Option::is_none")]
    pub attack_complexity: Option<String>,
    /// Reflects the context by which vulnerability exploitation is possible, one of: Network, Adjacent, Local, Physical
    #[serde(rename = "attack_vector", skip_serializing_if = "Option::is_none")]
    pub attack_vector: Option<String>,
    /// Measures the potential impact to availability of a successfully exploited misuse vulnerability, one of: None, Low, High
    #[serde(
        rename = "availability_impact",
        skip_serializing_if = "Option::is_none"
    )]
    pub availability_impact: Option<String>,
    /// Measures the potential impact on confidentiality of a successfully exploited misuse vulnerability, one of: None, Low, High
    #[serde(
        rename = "confidentiality_impact",
        skip_serializing_if = "Option::is_none"
    )]
    pub confidentiality_impact: Option<String>,
    /// Measures the potential impact to integrity of a successfully exploited misuse vulnerability, one of: None, Low, High
    #[serde(rename = "integrity_impact", skip_serializing_if = "Option::is_none")]
    pub integrity_impact: Option<String>,
    /// Describes the level of privileges an attacker must possess before successfully exploiting the vulnerability, one of: None, Low, High
    #[serde(
        rename = "privileges_required",
        skip_serializing_if = "Option::is_none"
    )]
    pub privileges_required: Option<String>,
    /// The Scope metric captures whether a vulnerability in one vulnerable component impacts resources in components beyond its security scope, one of: Unchanged, Changed
    #[serde(rename = "scope", skip_serializing_if = "Option::is_none")]
    pub scope: Option<String>,
    /// Score of the vulnerability - which is between 0 and 10, the higher is the score - the more riskier the vulnerability is
    #[serde(rename = "score", skip_serializing_if = "Option::is_none")]
    pub score: Option<f64>,
    /// Severity of the vulnerability, can be empty or one of: LOW, MEDIUM, HIGH, CRITICAL
    #[serde(rename = "severity", skip_serializing_if = "Option::is_none")]
    pub severity: Option<String>,
    /// Captures the requirement for a human user, other than the attacker, to participate in the successful compromise of the vulnerable component, one of: None, Required
    #[serde(rename = "user_interaction", skip_serializing_if = "Option::is_none")]
    pub user_interaction: Option<String>,
}

impl DomainPeriodVulnerabilityCvssV3 {
    pub fn new() -> DomainPeriodVulnerabilityCvssV3 {
        DomainPeriodVulnerabilityCvssV3 {
            attack_complexity: None,
            attack_vector: None,
            availability_impact: None,
            confidentiality_impact: None,
            integrity_impact: None,
            privileges_required: None,
            scope: None,
            score: None,
            severity: None,
            user_interaction: None,
        }
    }
}
