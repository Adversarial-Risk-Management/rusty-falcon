/*
 * CrowdStrike API Specification
 *
 * Use this API specification as a reference for the API endpoints you can use to interact with your Falcon environment. These endpoints support authentication via OAuth2 and interact with detections and network containment. For detailed usage guides and examples, see our [documentation inside the Falcon console](https://falcon.crowdstrike.com/support/documentation).     To use the APIs described below, combine the base URL with the path shown for each API endpoint. For commercial cloud customers, your base URL is `https://api.crowdstrike.com`.    Each API endpoint requires authorization via an OAuth2 token. Your first API request should retrieve an OAuth2 token using the `oauth2/token` endpoint, such as `https://api.crowdstrike.com/oauth2/token`. For subsequent requests, include the OAuth2 token in an HTTP authorization header. Tokens expire after 30 minutes, after which you should make a new token request to continue making API requests.
 *
 * The version of the OpenAPI document: rolling
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModelsPeriodRuleProperties {
    #[serde(rename = "cvssAttackComplexity")]
    pub cvss_attack_complexity: String,
    #[serde(rename = "cvssAttackVector")]
    pub cvss_attack_vector: String,
    #[serde(rename = "cvssAvailabilityImpact")]
    pub cvss_availability_impact: String,
    #[serde(rename = "cvssBaseScore")]
    pub cvss_base_score: f64,
    #[serde(rename = "cvssConfidentialityImpact")]
    pub cvss_confidentiality_impact: String,
    #[serde(rename = "cvssExploitabilityScore")]
    pub cvss_exploitability_score: f64,
    #[serde(rename = "cvssImpactScore")]
    pub cvss_impact_score: f64,
    #[serde(rename = "cvssIntegrityImpact")]
    pub cvss_integrity_impact: String,
    #[serde(rename = "cvssPrivilegesRequired")]
    pub cvss_privileges_required: String,
    #[serde(rename = "cvssScope")]
    pub cvss_scope: String,
    #[serde(rename = "cvssSource")]
    pub cvss_source: String,
    #[serde(rename = "cvssUserInteraction")]
    pub cvss_user_interaction: String,
    #[serde(rename = "cvssVector")]
    pub cvss_vector: String,
    #[serde(rename = "description")]
    pub description: String,
    #[serde(rename = "exploitDateRecordedTimestamp")]
    pub exploit_date_recorded_timestamp: i64,
    #[serde(rename = "exploitSources")]
    pub exploit_sources: Vec<models::IngestionPeriodCveExploitSource>,
    #[serde(rename = "exploitStatus")]
    pub exploit_status: String,
    #[serde(rename = "exploitUpdatedTimestamp")]
    pub exploit_updated_timestamp: i64,
    #[serde(rename = "exprtRating")]
    pub exprt_rating: String,
    #[serde(rename = "exprtRatingDateRecordedTimestamp")]
    pub exprt_rating_date_recorded_timestamp: i64,
    #[serde(rename = "exprtRatingHighest")]
    pub exprt_rating_highest: String,
    #[serde(rename = "exprtRatingHighestRecordedTimestamp")]
    pub exprt_rating_highest_recorded_timestamp: i64,
    #[serde(rename = "firstSeenTimestamp")]
    pub first_seen_timestamp: i64,
    #[serde(rename = "references")]
    pub references: Vec<models::IngestionPeriodReference>,
    #[serde(rename = "remediationCount")]
    pub remediation_count: i32,
    #[serde(rename = "remediationSources")]
    pub remediation_sources: Vec<String>,
    #[serde(rename = "remediations")]
    pub remediations: Vec<String>,
    #[serde(rename = "runtime")]
    pub runtime: String,
    #[serde(rename = "scannerVersion")]
    pub scanner_version: String,
    #[serde(rename = "severity")]
    pub severity: String,
    #[serde(rename = "topExprtRatingFactors")]
    pub top_exprt_rating_factors: Vec<models::IngestionPeriodExPrtRatingFactors>,
}

impl ModelsPeriodRuleProperties {
    pub fn new(
        cvss_attack_complexity: String,
        cvss_attack_vector: String,
        cvss_availability_impact: String,
        cvss_base_score: f64,
        cvss_confidentiality_impact: String,
        cvss_exploitability_score: f64,
        cvss_impact_score: f64,
        cvss_integrity_impact: String,
        cvss_privileges_required: String,
        cvss_scope: String,
        cvss_source: String,
        cvss_user_interaction: String,
        cvss_vector: String,
        description: String,
        exploit_date_recorded_timestamp: i64,
        exploit_sources: Vec<models::IngestionPeriodCveExploitSource>,
        exploit_status: String,
        exploit_updated_timestamp: i64,
        exprt_rating: String,
        exprt_rating_date_recorded_timestamp: i64,
        exprt_rating_highest: String,
        exprt_rating_highest_recorded_timestamp: i64,
        first_seen_timestamp: i64,
        references: Vec<models::IngestionPeriodReference>,
        remediation_count: i32,
        remediation_sources: Vec<String>,
        remediations: Vec<String>,
        runtime: String,
        scanner_version: String,
        severity: String,
        top_exprt_rating_factors: Vec<models::IngestionPeriodExPrtRatingFactors>,
    ) -> ModelsPeriodRuleProperties {
        ModelsPeriodRuleProperties {
            cvss_attack_complexity,
            cvss_attack_vector,
            cvss_availability_impact,
            cvss_base_score,
            cvss_confidentiality_impact,
            cvss_exploitability_score,
            cvss_impact_score,
            cvss_integrity_impact,
            cvss_privileges_required,
            cvss_scope,
            cvss_source,
            cvss_user_interaction,
            cvss_vector,
            description,
            exploit_date_recorded_timestamp,
            exploit_sources,
            exploit_status,
            exploit_updated_timestamp,
            exprt_rating,
            exprt_rating_date_recorded_timestamp,
            exprt_rating_highest,
            exprt_rating_highest_recorded_timestamp,
            first_seen_timestamp,
            references,
            remediation_count,
            remediation_sources,
            remediations,
            runtime,
            scanner_version,
            severity,
            top_exprt_rating_factors,
        }
    }
}
