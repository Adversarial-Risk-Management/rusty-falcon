/*
 * CrowdStrike API Specification
 *
 * Use this API specification as a reference for the API endpoints you can use to interact with your Falcon environment. These endpoints support authentication via OAuth2 and interact with detections and network containment. For detailed usage guides and more information about API endpoints that don't yet support OAuth2, see our [documentation inside the Falcon console](https://falcon.crowdstrike.com/support/documentation). To use the APIs described below, combine the base URL with the path shown for each API endpoint. For commercial cloud customers, your base URL is `https://api.crowdstrike.com`. Each API endpoint requires authorization via an OAuth2 token. Your first API request should retrieve an OAuth2 token using the `oauth2/token` endpoint, such as `https://api.crowdstrike.com/oauth2/token`. For subsequent requests, include the OAuth2 token in an HTTP authorization header. Tokens expire after 30 minutes, after which you should make a new token request to continue making API requests.
 *
 * The version of the OpenAPI document: rolling
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct StoreDomainAppDetailsV1 {
    #[serde(rename = "activate_with_dependencies", skip_serializing_if = "Option::is_none")]
    pub activate_with_dependencies: Option<Vec<String>>,
    /// indicates whether this app is activated as a dependency for the given customer
    #[serde(rename = "activated_as_dependency")]
    pub activated_as_dependency: bool,
    /// name of sku, as defined in csam, that is associated with the app. Only returned when calling from admin ui.'
    #[serde(rename = "assigned_sku", skip_serializing_if = "Option::is_none")]
    pub assigned_sku: Option<String>,
    /// indicates whether the app is in beta mode. If so, it will only be visible to customers with the associated feature flag enabled.
    #[serde(rename = "beta")]
    pub beta: bool,
    /// list of categories associated to the app (i.e. UEBA, Vuln Mgmt, Deception, etc.)
    #[serde(rename = "categories", skip_serializing_if = "Option::is_none")]
    pub categories: Option<Vec<String>>,
    /// Indicates whether the app can be configured.
    #[serde(rename = "configurable")]
    pub configurable: bool,
    /// indicates days remaining in trial until expiration. It should only be visible after the trial has started.
    #[serde(rename = "days_remaining", skip_serializing_if = "Option::is_none")]
    pub days_remaining: Option<i32>,
    /// link to demo video for educational purposes
    #[serde(rename = "demo_url", skip_serializing_if = "Option::is_none")]
    pub demo_url: Option<String>,
    /// link to any partner provided documentation
    #[serde(rename = "docs_url", skip_serializing_if = "Option::is_none")]
    pub docs_url: Option<String>,
    /// link to the partner provided Data Processing Agreement (DPA)
    #[serde(rename = "dpa_url", skip_serializing_if = "Option::is_none")]
    pub dpa_url: Option<String>,
    /// List of descriptive text for environment dependencies enabled for the app.
    #[serde(rename = "environment_requirements", skip_serializing_if = "Option::is_none")]
    pub environment_requirements: Option<Vec<String>>,
    /// link to to the partner provided EULA
    #[serde(rename = "eula_url", skip_serializing_if = "Option::is_none")]
    pub eula_url: Option<String>,
    /// to be rendered as bullet points in the UI. Specific call outs to key pieces of information about the app
    #[serde(rename = "features", skip_serializing_if = "Option::is_none")]
    pub features: Option<Vec<String>>,
    /// list of handlers associated to the app. Only returned when calling from admin ui.
    #[serde(rename = "handlers", skip_serializing_if = "Option::is_none")]
    pub handlers: Option<Vec<String>>,
    /// image for the app that is displayed in the marketplace listings/index page
    #[serde(rename = "hero_image", skip_serializing_if = "Option::is_none")]
    pub hero_image: Option<String>,
    /// unique identifier for the app
    #[serde(rename = "id")]
    pub id: String,
    /// Use for the get more info button. Link to any partner provided URL for details on app.
    #[serde(rename = "info_url", skip_serializing_if = "Option::is_none")]
    pub info_url: Option<String>,
    /// an arbitrary label assigned to the app. This is used presentation purposes to display apps under categories such as; featured, informational, falcon apps, etc.
    #[serde(rename = "labels", skip_serializing_if = "Option::is_none")]
    pub labels: Option<Vec<String>>,
    /// the latest available version for the customer to upgrade to.
    #[serde(rename = "latest_version", skip_serializing_if = "Option::is_none")]
    pub latest_version: Option<String>,
    /// link to login to partner product. This is only populated after activation has been completed.
    #[serde(rename = "login_url", skip_serializing_if = "Option::is_none")]
    pub login_url: Option<String>,
    /// logo for the app
    #[serde(rename = "logo", skip_serializing_if = "Option::is_none")]
    pub logo: Option<String>,
    /// List of skus that the app requires which the user is not currently subscribed to.
    #[serde(rename = "missing_skus", skip_serializing_if = "Option::is_none")]
    pub missing_skus: Option<Vec<String>>,
    /// display name of the app
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// list of pre-requisite Falcon modules that are optional for this app
    #[serde(rename = "optional_skus", skip_serializing_if = "Option::is_none")]
    pub optional_skus: Option<Vec<String>>,
    /// detailed description and overview of the partner company and product
    #[serde(rename = "overview")]
    pub overview: String,
    #[serde(rename = "owner")]
    pub owner: Box<crate::models::StoreDomainOwnerDetailsV1>,
    #[serde(rename = "pending_trial_expiration_override_days", skip_serializing_if = "Option::is_none")]
    pub pending_trial_expiration_override_days: Option<i32>,
    /// list of OS platforms the app supports
    #[serde(rename = "platforms", skip_serializing_if = "Option::is_none")]
    pub platforms: Option<Vec<String>>,
    /// a link or email address customers can contact for pricing inquiries
    #[serde(rename = "pricing", skip_serializing_if = "Option::is_none")]
    pub pricing: Option<String>,
    /// link to the partner provided privacy agreement
    #[serde(rename = "privacy_url", skip_serializing_if = "Option::is_none")]
    pub privacy_url: Option<String>,
    /// list of pre-requisite Falcon modules that are required for this app to function
    #[serde(rename = "required_skus", skip_serializing_if = "Option::is_none")]
    pub required_skus: Option<Vec<String>>,
    /// provides additional links to resources related to the app
    #[serde(rename = "resource_links", skip_serializing_if = "Option::is_none")]
    pub resource_links: Option<Vec<crate::models::StoreDomainAppLinks>>,
    /// relative S3 path to screenshots of the app and associated alt text
    #[serde(rename = "screenshots", skip_serializing_if = "Option::is_none")]
    pub screenshots: Option<Vec<crate::models::StoreDomainScreenshotsV1>>,
    /// OR operator set (true/false) to indicate that only one of skus are required
    #[serde(rename = "sku_requirement_or_operator_set")]
    pub sku_requirement_or_operator_set: bool,
    #[serde(rename = "software", skip_serializing_if = "Option::is_none")]
    pub software: Option<Box<crate::models::StoreDomainManagedSoftwareResponse>>,
    /// state of the app for the given customer. Is empty this should default to AVAILABLE in the UI
    #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
    pub state: Option<String>,
    /// high level summary used as a tag line
    #[serde(rename = "summary")]
    pub summary: String,
    /// list of supported clouds. This is used to filter the app listing to available apps per cloud.
    #[serde(rename = "supported_clouds", skip_serializing_if = "Option::is_none")]
    pub supported_clouds: Option<Vec<String>>,
    /// indicates whether the app can be activated or not. Informational apps cannot be.
    #[serde(rename = "trial_ready")]
    pub trial_ready: bool,
    /// indicates whether the latest version is greater than the current version meaning a version upgrade is available.
    #[serde(rename = "upgrade_available")]
    pub upgrade_available: bool,
    /// a description that speaks specifically to the integration use cases between the partner product and Falcon
    #[serde(rename = "usecases", skip_serializing_if = "Option::is_none")]
    pub usecases: Option<String>,
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<Box<crate::models::StoreDomainVersionDetailsV1>>,
}

impl StoreDomainAppDetailsV1 {
    pub fn new(activated_as_dependency: bool, beta: bool, configurable: bool, id: String, overview: String, owner: crate::models::StoreDomainOwnerDetailsV1, sku_requirement_or_operator_set: bool, summary: String, trial_ready: bool, upgrade_available: bool) -> StoreDomainAppDetailsV1 {
        StoreDomainAppDetailsV1 {
            activate_with_dependencies: None,
            activated_as_dependency,
            assigned_sku: None,
            beta,
            categories: None,
            configurable,
            days_remaining: None,
            demo_url: None,
            docs_url: None,
            dpa_url: None,
            environment_requirements: None,
            eula_url: None,
            features: None,
            handlers: None,
            hero_image: None,
            id,
            info_url: None,
            labels: None,
            latest_version: None,
            login_url: None,
            logo: None,
            missing_skus: None,
            name: None,
            optional_skus: None,
            overview,
            owner: Box::new(owner),
            pending_trial_expiration_override_days: None,
            platforms: None,
            pricing: None,
            privacy_url: None,
            required_skus: None,
            resource_links: None,
            screenshots: None,
            sku_requirement_or_operator_set,
            software: None,
            state: None,
            summary,
            supported_clouds: None,
            trial_ready,
            upgrade_available,
            usecases: None,
            version: None,
        }
    }
}
