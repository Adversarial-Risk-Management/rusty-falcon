/*
 * CrowdStrike API Specification
 *
 * Use this API specification as a reference for the API endpoints you can use to interact with your Falcon environment. These endpoints support authentication via OAuth2 and interact with detections and network containment. For detailed usage guides and examples, see our [documentation inside the Falcon console](https://falcon.crowdstrike.com/support/documentation).     To use the APIs described below, combine the base URL with the path shown for each API endpoint. For commercial cloud customers, your base URL is `https://api.crowdstrike.com`.    Each API endpoint requires authorization via an OAuth2 token. Your first API request should retrieve an OAuth2 token using the `oauth2/token` endpoint, such as `https://api.crowdstrike.com/oauth2/token`. For subsequent requests, include the OAuth2 token in an HTTP authorization header. Tokens expire after 30 minutes, after which you should make a new token request to continue making API requests.
 *
 * The version of the OpenAPI document: 2025-07-18T00:00:03Z
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModelsPeriodApiUnidentifiedContainer {
    #[serde(rename = "assessed_images")]
    pub assessed_images: Vec<models::ModelsPeriodImageInformation>,
    #[serde(rename = "assessed_images_count")]
    pub assessed_images_count: String,
    #[serde(rename = "cid")]
    pub cid: String,
    #[serde(rename = "cluster_name")]
    pub cluster_name: String,
    #[serde(rename = "containers_impacted")]
    pub containers_impacted: Vec<models::ModelsPeriodContainerInformation>,
    #[serde(rename = "containers_impacted_count")]
    pub containers_impacted_count: String,
    #[serde(rename = "detect_timestamp")]
    pub detect_timestamp: String,
    #[serde(rename = "detections_count")]
    pub detections_count: String,
    #[serde(rename = "first_seen")]
    pub first_seen: String,
    #[serde(rename = "host_id")]
    pub host_id: String,
    #[serde(rename = "image_assessment_detections_count")]
    pub image_assessment_detections_count: String,
    #[serde(rename = "last_seen")]
    pub last_seen: String,
    #[serde(rename = "namespace")]
    pub namespace: String,
    #[serde(rename = "node_name")]
    pub node_name: String,
    #[serde(rename = "pod_id")]
    pub pod_id: String,
    #[serde(rename = "pod_name")]
    pub pod_name: String,
    #[serde(rename = "runtime_detections_count")]
    pub runtime_detections_count: String,
    #[serde(rename = "severity")]
    pub severity: String,
    #[serde(rename = "unassessed_images")]
    pub unassessed_images: Vec<models::ModelsPeriodImageInformation>,
    #[serde(rename = "unassessed_images_count")]
    pub unassessed_images_count: String,
    #[serde(rename = "visible_to_k8s")]
    pub visible_to_k8s: String,
}

impl ModelsPeriodApiUnidentifiedContainer {
    pub fn new(assessed_images: Vec<models::ModelsPeriodImageInformation>, assessed_images_count: String, cid: String, cluster_name: String, containers_impacted: Vec<models::ModelsPeriodContainerInformation>, containers_impacted_count: String, detect_timestamp: String, detections_count: String, first_seen: String, host_id: String, image_assessment_detections_count: String, last_seen: String, namespace: String, node_name: String, pod_id: String, pod_name: String, runtime_detections_count: String, severity: String, unassessed_images: Vec<models::ModelsPeriodImageInformation>, unassessed_images_count: String, visible_to_k8s: String) -> ModelsPeriodApiUnidentifiedContainer {
        ModelsPeriodApiUnidentifiedContainer {
            assessed_images,
            assessed_images_count,
            cid,
            cluster_name,
            containers_impacted,
            containers_impacted_count,
            detect_timestamp,
            detections_count,
            first_seen,
            host_id,
            image_assessment_detections_count,
            last_seen,
            namespace,
            node_name,
            pod_id,
            pod_name,
            runtime_detections_count,
            severity,
            unassessed_images,
            unassessed_images_count,
            visible_to_k8s,
        }
    }
}

