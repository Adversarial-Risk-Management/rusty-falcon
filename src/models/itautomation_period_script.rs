/*
 * CrowdStrike API Specification
 *
 * Use this API specification as a reference for the API endpoints you can use to interact with your Falcon environment. These endpoints support authentication via OAuth2 and interact with detections and network containment. For detailed usage guides and examples, see our [documentation inside the Falcon console](https://falcon.crowdstrike.com/support/documentation).     To use the APIs described below, combine the base URL with the path shown for each API endpoint. For commercial cloud customers, your base URL is `https://api.crowdstrike.com`.    Each API endpoint requires authorization via an OAuth2 token. Your first API request should retrieve an OAuth2 token using the `oauth2/token` endpoint, such as `https://api.crowdstrike.com/oauth2/token`. For subsequent requests, include the OAuth2 token in an HTTP authorization header. Tokens expire after 30 minutes, after which you should make a new token request to continue making API requests.
 *
 * The version of the OpenAPI document: rolling
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ItautomationPeriodScript {
    /// The type of action to perform
    #[serde(rename = "action_type", skip_serializing_if = "Option::is_none")]
    pub action_type: Option<ActionType>,
    /// The script content to execute. Example: echo 'Hello, World!'
    #[serde(rename = "content", skip_serializing_if = "Option::is_none")]
    pub content: Option<String>,
    /// The list of file IDs to execute. Example: ['f64b95555ef54ea682619ce880d267cc', 'a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6']
    #[serde(rename = "file_ids", skip_serializing_if = "Option::is_none")]
    pub file_ids: Option<Vec<String>>,
    /// The scripting language to use
    #[serde(rename = "language", skip_serializing_if = "Option::is_none")]
    pub language: Option<Language>,
    /// The arguments to execute the script file with.
    #[serde(rename = "script_args", skip_serializing_if = "Option::is_none")]
    pub script_args: Option<String>,
    /// The file ID of the script file to execute. Example: f64b95555ef54ea682619ce880d267cc
    #[serde(rename = "script_file_id", skip_serializing_if = "Option::is_none")]
    pub script_file_id: Option<String>,
}

impl ItautomationPeriodScript {
    pub fn new() -> ItautomationPeriodScript {
        ItautomationPeriodScript {
            action_type: None,
            content: None,
            file_ids: None,
            language: None,
            script_args: None,
            script_file_id: None,
        }
    }
}
/// The type of action to perform
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ActionType {
    #[serde(rename = "script")]
    Script,
    #[serde(rename = "command")]
    Command,
    #[serde(rename = "script_file")]
    ScriptFile,
}

impl Default for ActionType {
    fn default() -> ActionType {
        Self::Script
    }
}
/// The scripting language to use
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Language {
    #[serde(rename = "bash")]
    Bash,
    #[serde(rename = "zsh")]
    Zsh,
    #[serde(rename = "powershell")]
    Powershell,
    #[serde(rename = "python")]
    Python,
}

impl Default for Language {
    fn default() -> Language {
        Self::Bash
    }
}
