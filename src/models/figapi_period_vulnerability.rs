/*
 * CrowdStrike API Specification
 *
 * Use this API specification as a reference for the API endpoints you can use to interact with your Falcon environment. These endpoints support authentication via OAuth2 and interact with detections and network containment. For detailed usage guides and examples, see our [documentation inside the Falcon console](https://falcon.crowdstrike.com/support/documentation).     To use the APIs described below, combine the base URL with the path shown for each API endpoint. For commercial cloud customers, your base URL is `https://api.crowdstrike.com`.    Each API endpoint requires authorization via an OAuth2 token. Your first API request should retrieve an OAuth2 token using the `oauth2/token` endpoint, such as `https://api.crowdstrike.com/oauth2/token`. For subsequent requests, include the OAuth2 token in an HTTP authorization header. Tokens expire after 30 minutes, after which you should make a new token request to continue making API requests.
 *
 * The version of the OpenAPI document: 2025-07-18T00:00:03Z
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FigapiPeriodVulnerability {
    #[serde(rename = "CPEEdition", skip_serializing_if = "Option::is_none")]
    pub cpe_edition: Option<String>,
    #[serde(rename = "CPELanguage", skip_serializing_if = "Option::is_none")]
    pub cpe_language: Option<String>,
    #[serde(rename = "CPEOther", skip_serializing_if = "Option::is_none")]
    pub cpe_other: Option<String>,
    #[serde(rename = "CPEPart", skip_serializing_if = "Option::is_none")]
    pub cpe_part: Option<String>,
    #[serde(rename = "CPEProduct", skip_serializing_if = "Option::is_none")]
    pub cpe_product: Option<String>,
    #[serde(rename = "CPESoftwareEdition", skip_serializing_if = "Option::is_none")]
    pub cpe_software_edition: Option<String>,
    #[serde(rename = "CPETargetHardware", skip_serializing_if = "Option::is_none")]
    pub cpe_target_hardware: Option<String>,
    #[serde(rename = "CPETargetSoftware", skip_serializing_if = "Option::is_none")]
    pub cpe_target_software: Option<String>,
    #[serde(rename = "CPEUpdate", skip_serializing_if = "Option::is_none")]
    pub cpe_update: Option<String>,
    #[serde(rename = "CPEVendor", skip_serializing_if = "Option::is_none")]
    pub cpe_vendor: Option<String>,
    #[serde(rename = "CPEVersion", skip_serializing_if = "Option::is_none")]
    pub cpe_version: Option<String>,
    /// CVE(Common Vulnerabilities and Exposures) is a unique identifier assigned to publicly disclosed cyber security vulnerabilities
    #[serde(rename = "CVE", skip_serializing_if = "Option::is_none")]
    pub cve: Option<String>,
    /// Description of the vulnerability.
    #[serde(rename = "Description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// This can be one of: `Unproven`, `Available`, `EasilyAccessible`, `ActivelyUsed`.
    #[serde(rename = "ExploitStatus", skip_serializing_if = "Option::is_none")]
    pub exploit_status: Option<String>,
    /// The date when the vulnerability was last updated
    #[serde(rename = "LastUpdated", skip_serializing_if = "Option::is_none")]
    pub last_updated: Option<String>,
    /// The date when the vulnerability was published
    #[serde(rename = "PublishedDate", skip_serializing_if = "Option::is_none")]
    pub published_date: Option<String>,
}

impl FigapiPeriodVulnerability {
    pub fn new() -> FigapiPeriodVulnerability {
        FigapiPeriodVulnerability {
            cpe_edition: None,
            cpe_language: None,
            cpe_other: None,
            cpe_part: None,
            cpe_product: None,
            cpe_software_edition: None,
            cpe_target_hardware: None,
            cpe_target_software: None,
            cpe_update: None,
            cpe_vendor: None,
            cpe_version: None,
            cve: None,
            description: None,
            exploit_status: None,
            last_updated: None,
            published_date: None,
        }
    }
}

